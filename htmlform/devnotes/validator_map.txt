/* 
	ein beliebiger Ausdruck akzeptiert Boolean und String als Ergebnis
	true und .+ sind valide, false und '' nicht
	wenn Ergebnis String und .+, dann wird dieser String als Fehlermeldung genommen
*/
setCustomCase($customResult)


/*
	setzt ein Feld auf "benötigt"
*/	
setRequired()


/*
	setzt die minimale Stringlänge des Feldes
*/
setMinLength($minlength)


/*
	setzt die maximale Stringlänge des Feldes
*/	
setMaxLength($maxlength)


/*
	setzt minimale und maximale Stringlänge des Feldes als array(min, max)
*/
setRangeLength(Array $range)


/*
	setzt den minimalen Zahlenwert des Feldes
*/
setMin($min)


/*
	setzt den maximalen Zahlenwert des Feldes
*/	
setMax($max)


/*
	setzt den minimalen und den maximalen Zahlenwert des Feldes als array(min, max)
*/
setRange(Array $range)


/*
	validiert den Feldwert als eMail-Adresse (IPs gehen auch)
*/	
setEmail()


/*
	validiert den Feldwert als URL (recht Standardkonform, d.h. weitgehend)
*/	
setUrl()


/*
	validiert den Feldwert als Datum nach Schema d(d)/m(m)/yyyy
*/	
setDate()


/*
	validiert den Feldwert als Datum nach Schema yyyy-m(m)-d(d)
*/
setDateISO()


/*
	validiert den Feldwert als Datum nach Schema d(d).m(m).yyyy
*/
setDateDE()


/*
	Feldwert darf nur englische Dezimalzahl sein - 111(.11)
*/	
setNumber()


/*
	Feldwert darf nur eine deutsche Dezimalzahl sein - 111(,11)
*/
setNumberDE()


/*
	Feldwert darf ausschließlich aus Zahlen bestehen
*/	
setDigits()


/*
	Feldwert muss eine syntaktisch richtige Kreditkartennummer sein (0)124-1234-1234-1234
*/	
setCreditcard()


/*
	Stellt sicher dass der Feldwert nur aus Angehörigen einer RegEy-Charakterklasse besteht (zB "a-zA-ZüÜäÄöÖß")
	OHNE ECKIGE KLAMMERN ANGEBEN!
*/
setCharacterClass($regExCharacterClass)